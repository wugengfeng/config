server:
  port: 9088
spring:
  rabbitmq:
    host: 39.108.107.103
    port: 8083
    username: guest
    password: guest
  #微服务跟踪平台
  zipkin:
    base-url: http://localhost:9010
  #数据采集 1为100%
  sleuth:
    sampler:
      percentage: 1.0
  datasource:
      url: jdbc:mysql://mysql.devdb.lovego.xin:3306/lovego_order?useUnicode=true&characterEncoding=UTF-8
      username: lovego_erp
      password: lovego_erplovego_erp
     # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      spring.datasource.filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
key: '{cipher}4891f1ba4d936c6fd905699dd5867f30c263f65bfe179b4be5d4820ff8d3b6c8'
eureka:
  client:
    serviceUrl:
      defaultZone: http://wugf:123456@localhost:8761/eureka
#hystrix 查看监控端点 hystrix.stream支持的最大并发
hystrix:
  config:
    stream:
      maxConcurrentConnections: 10
#配置为false才能使用spring cloud端点      
management:
  security:
    enabled: false
